<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 向Spring容器注册以下四个BeanPostProcessor：
     是为了让系统能够识别相应的注解。-->
    <context:annotation-config />
    <!-- 在xml配置了这个标签后，spring可以自动去扫描base-pack下面或者子包下面的Java文件，如果扫描到有@Component @Controller@Service等这些注解的类，
    则把这些类注册为bean-->
    <context:component-scan base-package="com.llh.service"/>
    <!--外在化参数配置的方式，不过该标签在spring配置文件中只能存在一份！！-->
    <context:property-placeholder location="classpath:db.properties"/>


    <!--//配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${jdbc.driver}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>

        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="typeAliasesPackage" value="cn.lh.pojo" />
        <property name="dataSource" ref="dataSource"/><!--指向上面配置的数据库-->
        <property name="mapperLocations" value="classpath:com/llh/mapper/*.xml"/>
        <!--pagehelper插件，分页的时候会用到-->
        <!--<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    &lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            &lt;!&ndash;reasonable=true&ndash;&gt;
                            &lt;!&ndash;supportMethodsArguments=true&ndash;&gt;
                            &lt;!&ndash;params=count=countSql&ndash;&gt;
                            &lt;!&ndash;autoRuntimeDialect=true&ndash;&gt;
                        </value>
                    </property>
                </bean>
            </array>
        </property>-->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.llh.mapper"/>
    </bean>

</beans>